name: Node.js CI

on:
  push:
    branches: [main, master, develop]
    paths:
      - 'node/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/node.yml'
  pull_request:
    branches: [main, master, develop]
    paths:
      - 'node/**'
      - 'package.json'
      - 'package-lock.json'

jobs:
  test:
    name: Test on ${{ matrix.os }} with Node ${{ matrix.node-version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20, 22]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build --workspace=node

      - name: Run tests
        run: npm run test --workspace=node

      - name: Generate coverage
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 20
        run: npm run test:coverage --workspace=node

      - name: Upload coverage
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 20
        uses: codecov/codecov-action@v4
        with:
          files: ./node/coverage/coverage-final.json
          flags: node
          fail_ci_if_error: false

  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint --workspace=node

      - name: Type check
        run: npm run typecheck --workspace=node

      - name: Check build output
        run: |
          npm run build --workspace=node
          test -f node/dist/index.js || (echo "ESM build not found" && exit 1)
          test -f node/dist/index.cjs || (echo "CJS build not found" && exit 1)
          test -f node/dist/index.d.ts || (echo "Type declarations not found" && exit 1)
